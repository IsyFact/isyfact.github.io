name: Link Checker

on:
  push:
    branches:
      - feature/IFS-3651_web_link_checker_stats
  workflow_run:
    workflows: [Build Documentation]
    types: [completed]
    branches: [main]
  workflow_dispatch:

jobs:
  LinkChecker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up cache for docs artifact
        id: cache-docs
        uses: actions/cache@v4
        with:
          path: docs
          key: ${{ runner.os }}-docs-${{ hashFiles('docs/**/*.html') }}
          restore-keys: |
            ${{ runner.os }}-docs-

      - name: Download docs artifact from the last successful workflow
        if: steps.cache-docs.outputs.cache-hit != 'true'
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: antora_build.yml  # Name of the workflow that uploads the artifact
          name: docs
          path: docs
          workflow_conclusion: success
          branch: feature/IFS-3651_web_link_checker_stats

      - name: Restore Lychee cache
        uses: actions/cache@v4
        with:
          path: .lycheecache
          key: cache-lychee-${{ github.sha }}
          restore-keys: cache-lychee-

      - name: Run Lychee on docs folder
        uses: lycheeverse/lychee-action@v1.10.0
        with:
          args: |
            --no-progress 
            --cache --max-cache-age 1d
            --max-redirects 5
            './docs/**/*.html'
          format: markdown
          output: link_checker_report.md
          fail: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate correct links percentage
        id: calculate_percentage
        run: |
          # Extract values from the link checker report                    
          report_file="link_checker_report.md"

          total=$(grep '🔍 Total' "$report_file" | awk -F'|' '{print $3}' | xargs)
          successful=$(grep '✅ Successful' "$report_file" | awk -F'|' '{print $3}' | xargs)
          excluded=$(grep '👻 Excluded' "$report_file" | awk -F'|' '{print $3}' | xargs)
          
          # Calculate the total incorrect links (errors + timeouts)
          correct=$((successful + excluded))
          
          # Calculate the percentage of correct links
          if [ "$total" -gt 0 ]; then
            percentage=$(echo "scale=0; $correct * 100 / $total" | bc)
          else
            percentage=100
          fi
          
          echo "Percentage of correct links: $percentage%"
          
          # Save the percentage to the environment
          echo "CORRECT_LINKS_PERCENTAGE=$percentage" >> $GITHUB_ENV
